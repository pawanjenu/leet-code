/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    TreeNode parentX = null;
     TreeNode parentY = null;
    int xLevel = 0;
    int yLevel = 0;
    public boolean isCousins(TreeNode root, int x, int y) {
        findDepth(root,x,y,0,null);
        if(parentX == parentY)
            return false;
        if(xLevel == yLevel)
            return true;
        return false;
    }
    public void findDepth(TreeNode root, int x,int y,int level,TreeNode parent){
        if(root == null)
            return;
        if(root.val == x){
            xLevel = level;
            parentX = parent;
        }
        if(root.val == y){
            yLevel = level;
            parentY = parent;
        }
        findDepth(root.left,x,y,level+1,root);
        findDepth(root.right,x,y,level+1,root);
    }
}
