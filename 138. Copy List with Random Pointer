/*
// Definition for a Node.
class Node {
    public int val;
    public Node next;
    public Node random;

    public Node() {}

    public Node(int _val,Node _next,Node _random) {
        val = _val;
        next = _next;
        random = _random;
    }
};
*/
class Solution {
    public Node copyRandomList(Node head) {
        HashMap<Node,Node> map = new HashMap<>();
        Node curr = head;
        Node original = new Node(-1,null,null);
        while(curr!= null){
            map.put(curr,new Node(curr.val,null,null));
            curr = curr.next;
        }
        curr = head;
        original.next = map.get(curr);
        while(curr!= null){
            map.get(curr).next = map.get(curr.next);
            map.get(curr).random = map.get(curr.random);
            curr = curr.next;
        }
        return original.next;
    }
}
