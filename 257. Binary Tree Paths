/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public List<String> binaryTreePaths(TreeNode root) {
        return binaryTreePathsUtil(root,"",new ArrayList<>());
    }
    
    public List<String> binaryTreePathsUtil(TreeNode root,String solution,List<String> answer){
        if(root == null)
            return answer;
        if(root.left == null && root.right == null){
            solution = solution + String.valueOf(root.val);
            answer.add(solution);
            return answer;
        }
        solution = solution + String.valueOf(root.val) + "->";
        binaryTreePathsUtil(root.left,solution,answer);
        binaryTreePathsUtil(root.right,solution,answer);
        return answer;
    }
}
