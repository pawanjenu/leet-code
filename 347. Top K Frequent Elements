class Solution {
    public List<Integer> topKFrequent(int[] nums, int k) {
        List<Integer> result = new ArrayList<>();
        HashMap<Integer,Integer> map = new HashMap<>();
        for(int i=0;i<nums.length;i++){
            map.put(nums[i],map.getOrDefault(nums[i],0)+1);
        }
        PriorityQueue<Map.Entry<Integer, Integer>> q = new PriorityQueue<Map.Entry<Integer, Integer>>((a,b) -> a.getValue()==b.getValue() ? b.getKey()-a.getKey() : b.getValue()-a.getValue());
        for(Map.Entry<Integer, Integer> entry: map.entrySet()){
            q.add(entry);
        }

    for(int i=k-1;i>=0;i--){
        result.add(q.poll().getKey());
    }
    return result;
    }
}
